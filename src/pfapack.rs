/* automatically generated by rust-bindgen 0.65.1 */

#[derive(PartialEq, Copy, Clone, Hash, Debug, Default)]
#[repr(C)]
pub struct __BindgenComplex<T> {
    pub re: T,
    pub im: T,
}
pub type FloatCmplx = __BindgenComplex<f32>;
pub type DoubleCmplx = __BindgenComplex<f64>;
extern "C" {
    pub fn ssktrf_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut f32,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut ::core::ffi::c_int,
        arg7: *mut f32,
        arg8: *const ::core::ffi::c_int,
        arg9: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn dsktrf_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut f64,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut ::core::ffi::c_int,
        arg7: *mut f64,
        arg8: *const ::core::ffi::c_int,
        arg9: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn csktrf_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut FloatCmplx,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut ::core::ffi::c_int,
        arg7: *mut FloatCmplx,
        arg8: *const ::core::ffi::c_int,
        arg9: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn zsktrf_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut DoubleCmplx,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut ::core::ffi::c_int,
        arg7: *mut DoubleCmplx,
        arg8: *const ::core::ffi::c_int,
        arg9: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn ssktrd_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut f32,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut f32,
        arg7: *mut f32,
        arg8: *mut f32,
        arg9: *const ::core::ffi::c_int,
        arg10: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn dsktrd_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut f64,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut f64,
        arg7: *mut f64,
        arg8: *mut f64,
        arg9: *const ::core::ffi::c_int,
        arg10: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn csktrd_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut FloatCmplx,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut f32,
        arg7: *mut FloatCmplx,
        arg8: *mut FloatCmplx,
        arg9: *const ::core::ffi::c_int,
        arg10: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn zsktrd_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut DoubleCmplx,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut f64,
        arg7: *mut DoubleCmplx,
        arg8: *mut DoubleCmplx,
        arg9: *const ::core::ffi::c_int,
        arg10: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn sskpfa_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut f32,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut f32,
        arg7: *mut ::core::ffi::c_int,
        arg8: *mut f32,
        arg9: *const ::core::ffi::c_int,
        arg10: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn dskpfa_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut f64,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut f64,
        arg7: *mut ::core::ffi::c_int,
        arg8: *mut f64,
        arg9: *const ::core::ffi::c_int,
        arg10: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn cskpfa_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut FloatCmplx,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut FloatCmplx,
        arg7: *mut ::core::ffi::c_int,
        arg8: *mut FloatCmplx,
        arg9: *const ::core::ffi::c_int,
        arg10: *mut f32,
        arg11: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn zskpfa_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut DoubleCmplx,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut DoubleCmplx,
        arg7: *mut ::core::ffi::c_int,
        arg8: *mut DoubleCmplx,
        arg9: *const ::core::ffi::c_int,
        arg10: *mut f64,
        arg11: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn sskpf10_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut f32,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut f32,
        arg7: *mut ::core::ffi::c_int,
        arg8: *mut f32,
        arg9: *const ::core::ffi::c_int,
        arg10: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn dskpf10_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut f64,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut f64,
        arg7: *mut ::core::ffi::c_int,
        arg8: *mut f64,
        arg9: *const ::core::ffi::c_int,
        arg10: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn cskpf10_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut FloatCmplx,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut FloatCmplx,
        arg7: *mut ::core::ffi::c_int,
        arg8: *mut FloatCmplx,
        arg9: *const ::core::ffi::c_int,
        arg10: *mut f32,
        arg11: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn zskpf10_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut DoubleCmplx,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut DoubleCmplx,
        arg7: *mut ::core::ffi::c_int,
        arg8: *mut DoubleCmplx,
        arg9: *const ::core::ffi::c_int,
        arg10: *mut f64,
        arg11: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn sskbtrd_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_char,
        arg4: *const ::core::ffi::c_int,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut f32,
        arg7: *const ::core::ffi::c_int,
        arg8: *mut f32,
        arg9: *mut f32,
        arg10: *const ::core::ffi::c_int,
        arg11: *mut f32,
        arg12: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn dskbtrd_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_char,
        arg4: *const ::core::ffi::c_int,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut f64,
        arg7: *const ::core::ffi::c_int,
        arg8: *mut f64,
        arg9: *mut f64,
        arg10: *const ::core::ffi::c_int,
        arg11: *mut f64,
        arg12: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn cskbtrd_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_char,
        arg4: *const ::core::ffi::c_int,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut FloatCmplx,
        arg7: *const ::core::ffi::c_int,
        arg8: *mut f32,
        arg9: *mut FloatCmplx,
        arg10: *mut FloatCmplx,
        arg11: *const ::core::ffi::c_int,
        arg12: *mut FloatCmplx,
        arg13: *mut f32,
        arg14: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn zskbtrd_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_char,
        arg3: *const ::core::ffi::c_char,
        arg4: *const ::core::ffi::c_int,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut DoubleCmplx,
        arg7: *const ::core::ffi::c_int,
        arg8: *mut f64,
        arg9: *mut DoubleCmplx,
        arg10: *mut DoubleCmplx,
        arg11: *const ::core::ffi::c_int,
        arg12: *mut DoubleCmplx,
        arg13: *mut f64,
        arg14: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn sskbpfa_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_int,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut f32,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut f32,
        arg7: *mut f32,
        arg8: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn dskbpfa_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_int,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut f64,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut f64,
        arg7: *mut f64,
        arg8: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn cskbpfa_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_int,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut FloatCmplx,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut FloatCmplx,
        arg7: *mut FloatCmplx,
        arg8: *mut f32,
        arg9: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn zskbpfa_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_int,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut DoubleCmplx,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut DoubleCmplx,
        arg7: *mut DoubleCmplx,
        arg8: *mut f64,
        arg9: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn sskbpf10_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_int,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut f32,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut f32,
        arg7: *mut f32,
        arg8: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn dskbpf10_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_int,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut f64,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut f64,
        arg7: *mut f64,
        arg8: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn cskbpf10_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_int,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut FloatCmplx,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut FloatCmplx,
        arg7: *mut FloatCmplx,
        arg8: *mut f32,
        arg9: *mut ::core::ffi::c_int,
    );
}
extern "C" {
    pub fn zskbpf10_(
        arg1: *const ::core::ffi::c_char,
        arg2: *const ::core::ffi::c_int,
        arg3: *const ::core::ffi::c_int,
        arg4: *mut DoubleCmplx,
        arg5: *const ::core::ffi::c_int,
        arg6: *mut DoubleCmplx,
        arg7: *mut DoubleCmplx,
        arg8: *mut f64,
        arg9: *mut ::core::ffi::c_int,
    );
}
